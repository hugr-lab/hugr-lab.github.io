"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[6982],{8453:(e,n,a)=>{a.d(n,{R:()=>o,x:()=>d});var t=a(6540);const s={},i=t.createContext(s);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(i.Provider,{value:n},e.children)}},9567:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>r,contentTitle:()=>d,default:()=>u,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"engine-configuration/data-sources/mysql","title":"MySQL","description":"MySQL data source configuration and usage in Hugr engine. Includes query push-down and JSON support.","source":"@site/docs/4-engine-configuration/1-data-sources/3-mysql.md","sourceDirName":"4-engine-configuration/1-data-sources","slug":"/engine-configuration/data-sources/mysql","permalink":"/docs/engine-configuration/data-sources/mysql","draft":false,"unlisted":false,"editUrl":"https://github.com/hugr-lab/hugr-lab.github.io/docs/4-engine-configuration/1-data-sources/3-mysql.md","tags":[],"version":"current","lastUpdatedBy":"vgsml","lastUpdatedAt":1749506002000,"sidebarPosition":4,"frontMatter":{"sidebar_position":4,"title":"MySQL","description":"MySQL data source configuration and usage in Hugr engine. Includes query push-down and JSON support."},"sidebar":"docsSidebar","previous":{"title":"PostgreSQL","permalink":"/docs/engine-configuration/data-sources/postgres"},"next":{"title":"Object Storage Access Configuration","permalink":"/docs/engine-configuration/storage-access"}}');var s=a(4848),i=a(8453);const o={sidebar_position:4,title:"MySQL",description:"MySQL data source configuration and usage in Hugr engine. Includes query push-down and JSON support."},d=void 0,r={},c=[{value:"Technical details",id:"technical-details",level:2},{value:"Limitations",id:"limitations",level:2},{value:"Setting up MySQL data source",id:"setting-up-mysql-data-source",level:2},{value:"MySQL schema definition",id:"mysql-schema-definition",level:2},{value:"Example",id:"example",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"The MySQL databases can be used as data sources in Hugr engine. The engine doesn't support query push-down for MySQL, but it can be used to access and manipulate data stored in MySQL tables and views."}),"\n",(0,s.jsx)(n.h2,{id:"technical-details",children:"Technical details"}),"\n",(0,s.jsxs)(n.p,{children:["The MySQL data source is a attached data base in the DuckDB computation engine used by ",(0,s.jsx)(n.code,{children:"hugr"})," query engine. So MySQL has all same limitations as DuckDB data source, but it can be used to access and manipulate data stored in MySQL tables and views."]}),"\n",(0,s.jsx)(n.h2,{id:"limitations",children:"Limitations"}),"\n",(0,s.jsxs)(n.p,{children:["The MySQL autoincrement columns are not supported in the Hugr engine. Even though the ",(0,s.jsx)(n.code,{children:"hugr"})," engine can read the data and mutate data in the MySQL tables. The insert mutations for tables with primary key in the ",(0,s.jsx)(n.code,{children:"hugr"})," should return created record, but in case the MySQL table has autoincrement primary key, the ",(0,s.jsx)(n.code,{children:"hugr"})," engine cannot return the created record, because it doesn't know the value of the autoincrement column. So, if you want to use MySQL as a data source in Hugr, you should avoid using autoincrement columns in your tables or not define the primary key by those fields."]}),"\n",(0,s.jsx)(n.h2,{id:"setting-up-mysql-data-source",children:"Setting up MySQL data source"}),"\n",(0,s.jsxs)(n.p,{children:["To set up a MySQL data source you need to add data source record to the ",(0,s.jsx)(n.code,{children:"data_sources"})," table through the GraphQL API."]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"path"})," should contain MySQL connection string (e.g. ",(0,s.jsx)(n.code,{children:"mysql://user:password@host:port/database?param=val"}),"). The path can also contain environment variables, for example ",(0,s.jsx)(n.code,{children:"mysql://user:password@host:port/[$HUGR_DB_NAME]"}),". When the data source is being attached to the Hugr engine, the environment variables will be replaced with the actual values."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-graphql",children:"mutation addMySQLDataSet($data: data_sources_mut_input_data! = {}) {\n  core {\n    insert_data_sources(data: $data) {\n      name\n      description\n      as_module\n      disabled\n      path\n      prefix\n      read_only\n      self_defined\n      type\n      catalogs {\n        name\n        description\n        path\n        type\n      }\n    }\n  }\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"Variables:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "data": {\n    "name": "mysql",\n    "type": "mysql",\n    "connection_string": "mysql://user:password@host:port/database",\n    "prefix": "ds1",\n    "description": "My MySQL data set",\n    "read_only": false,\n    "self_defined": false,\n    "as_module": true,\n    "disabled": false,\n    "catalogs": [\n      {\n        "name": "mysql_catalog",\n        "description": "My MySQL catalog source",\n        "path": "s3://my-bucket/my-mysql-catalog.graphql",\n        "type": "uriFile"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"connection_string"})," can also contain the ",(0,s.jsx)(n.code,{children:"ssl"})," parameter to enable SSL connection to the MySQL server, for example: ",(0,s.jsx)(n.code,{children:"mysql://user:password@host:port/database?ssl=true"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"mysql-schema-definition",children:"MySQL schema definition"}),"\n",(0,s.jsxs)(n.p,{children:["As the database source the MySQL data source can be marked as ",(0,s.jsx)(n.code,{children:"read_only"})," or ",(0,s.jsx)(n.code,{children:"self_defined"}),". The ",(0,s.jsx)(n.code,{children:"read_only"})," means that the data source is read-only and its data cannot be modified. The ",(0,s.jsx)(n.code,{children:"self_defined"})," means that the data source is self-defined and the GraphQL schema definition will be generated based on the Tables and Views metadata."]}),"\n",(0,s.jsx)(n.p,{children:"You can also add a number of catalogs to the MySQL data source. All data source catalogs will be merged into one catalog, as well with the self-defined generated definitions."}),"\n",(0,s.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/docs/examples/mysql",children:"MySQL: HR CRM Example"})}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);